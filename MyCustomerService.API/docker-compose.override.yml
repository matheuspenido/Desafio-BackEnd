services:
  postgres-customer:
    image: postgres:14
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: MyCustomerServiceDb
    ports:
      - "5437:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mycustomerservice.api:
    image: mycustomerserviceapi:dev
    build:
      context: ../
      dockerfile: ./MyCustomerService.API/MyCustomerService.API/Dockerfile.local
    environment:
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_ENVIRONMENT: "Development"
      AWS_ACCESS_KEY_ID: ${BUCKET_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${BUCKER_AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - postgres-customer
      - rabbitmq
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
 
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  rabbitmq_data: